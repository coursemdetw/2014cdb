<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo (http://webpages.charter.net/edreamleo/front.html) -->
<?xml-stylesheet ekr_test?>
<leo_file xmlns:leo="http://www.leo-editor.org/2011/leo" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="course-mde-tw.20140417093332.1998"><vh>@settings</vh>
<v t="course-mde-tw.20140417093332.1999"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="course-mde-tw.20140417093332.2000"><vh>@string initial_split_orientation = horizontal</vh></v>
<v t="course-mde-tw.20140417093332.2001"><vh>@string rst3_write_intermediate_extension = .rst</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2063"><vh>協同產品設計實習</vh></v>
<v t="2014pythonE.20140422152422.1669"><vh>電子郵箱管理</vh></v>
<v t="2014pythonE.20140422152422.1671"><vh>Github 帳號管理</vh></v>
<v t="2014pythonE.20140422152422.1670"><vh>OpenShift 權限管理</vh></v>
<v t="course-mde-tw.20140422171455.1745"><vh>Github 倉儲與 OpenShift 同步</vh></v>
<v t="2014spring.20140430140611.1875"><vh>協同出席登錄</vh></v>
<v t="2014spring.20140430175148.1847"><vh>@edit README.md</vh></v>
<v t="2014spring.20140430205920.1866"><vh>分散式課程評量</vh></v>
<v t="2014spring.20140430140611.1945"><vh>第十一週任務</vh></v>
<v t="2014spring.20140513154549.3590" a="E"><vh>第十二週任務</vh>
<v t="2014spring.20140513154549.3591"><vh>組立約束條件屬性</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2027" a="E"><vh>@path wsgi</vh>
<v t="course-mde-tw.20140417093332.2028" a="E"
expanded="course-mde-tw.20140417093332.2030,"><vh>@file application</vh></v>
<v t="2014spring.20140509071814.2155"
expanded="2014spring.20140509071814.2179,"><vh>@file cmsimply.py</vh></v>
</v>
<v t="2014spring.20140503125211.2473" a="E"><vh>分組程式開發</vh>
<v t="2014pythonE.20140528233931.2166" a="E"><vh>@path wsgi/programs/cdbg15</vh>
<v t="2014pythonE.20140528233931.2167"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014pythonE.20140521202529.2011" a="E"><vh>@path wsgi/programs/cdbg14</vh>
<v t="2014pythonE.20140618151851.2285"><vh>@edit remsub6.py</vh></v>
<v t="2014pythonE.20140618151851.2283"><vh>@edit remsub5.py</vh></v>
<v t="2014pythonE.20140521202529.2012"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014pythonE.20140519202248.1434" a="E"><vh>@path wsgi/programs/cdbg8</vh>
<v t="2014pythonE.20140519202248.1435"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014pythonE.20140519074351.1903" a="E"><vh>@path wsgi/programs/cdbg9</vh>
<v t="2014pythonE.20140619190810.2027"><vh>@edit remsub5.py</vh></v>
<v t="2014pythonE.20140619190810.2025"><vh>@edit remsub6.py</vh></v>
<v t="2014pythonE.20140519074351.1904"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014pythonE.20140507141007.1807" a="E"><vh>@path wsgi/programs/cdbg13</vh>
<v t="2014pythonE.20140621152459.2454"><vh>@edit remsub5.py</vh></v>
<v t="2014pythonE.20140621152459.2452"><vh>@edit cardreader.py</vh></v>
<v t="2014pythonE.20140507141007.1808"><vh>@edit __init__.py</vh></v>
<v t="2014pythonE.20140528223628.1925"><vh>@edit remsub6.py</vh></v>
</v>
<v t="2014spring.20140503125211.2474" a="E"><vh>@path wsgi/programs/cdbg1</vh>
<v t="2014spring.20140503125211.2475"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140503125211.2476" a="E"><vh>@path wsgi/programs/cdbg2</vh>
<v t="2014pythonE.20140623184347.2203"><vh>@edit oldham.py</vh></v>
<v t="2014spring.20140503125211.2477"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014pythonE.20140514141707.2193" a="E"><vh>@path wsgi/programs/cdbg5</vh>
<v t="2014pythonE.20140514141707.2194"><vh>@edit __init__.py</vh></v>
</v>
<v t="2014spring.20140513154549.3595" a="E"><vh>@path wsgi/programs/cdbg30</vh>
<v t="2014spring.20140513154549.3596"><vh>@edit __init__.py</vh></v>
<v t="2014spring.20140513154549.3597"><vh>@edit man.py</vh></v>
<v t="2014spring.20140521133830.1904"><vh>@edit man2.py</vh></v>
<v t="2014spring.20140528132415.1926"><vh>@edit remsub6.py</vh></v>
</v>
</v>
<v t="course-mde-tw.20140417093332.2058" a="E"><vh>利用 pandoc 進行格式轉換</vh>
<v t="course-mde-tw.20140422221207.1747"><vh>注意事項</vh></v>
<v t="2014spring.20140430205920.1895"><vh>@button pandoc_auto</vh></v>
<v t="course-mde-tw.20140417093332.2060" a="E"><vh>@path wsgi/doc</vh>
<v t="course-mde-tw.20140417093332.2061"><vh>@edit title.txt</vh></v>
</v>
</v>
<v t="course-mde-tw.20140417093332.2047" a="E"><vh>分組協同報告區</vh>
<v t="course-mde-tw.20140417093332.2048" a="E"><vh>@path wsgi/doc</vh>
<v t="2014pythonE.20140520001559.1752" a="E"><vh>@path 2bg10</vh>
<v t="2014pythonE.20140520001559.1753"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140520001559.1748" a="E"><vh>@path 2bg7</vh>
<v t="2014pythonE.20140520001559.1749"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140519202248.1430" a="E"><vh>@path 2bg8</vh>
<v t="2014pythonE.20140519202248.1431" a="O"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140514155607.1899" a="E"><vh>@path 2bg18</vh>
<v t="2014pythonE.20140514155607.1900"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140513163709.1881" a="E"><vh>@path 2bg17</vh>
<v t="2014pythonE.20140513163709.1882" a="O"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140507142951.1656" a="E"><vh>@path 2bg14</vh>
<v t="2014pythonE.20140507142951.1657"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140430162301.1761" a="E"><vh>@path 2bg13</vh>
<v t="2014pythonE.20140430162301.1762"><vh>@edit doc.txt</vh></v>
</v>
<v t="kmolII_lite.20140430174156.1609" a="E"><vh>@path 2bg6</vh>
<v t="kmolII_lite.20140430174156.1610"><vh>@edit doc.txt</vh></v>
</v>
<v t="kmolII_lite.20140430174205.1613" a="E"><vh>@path 2bg9</vh>
<v t="kmolII_lite.20140430174205.1614"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140430152238.1751" a="E"><vh>@path 2bg2</vh>
<v t="2014pythonE.20140430152238.1752"><vh>@edit doc.txt</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2049" a="E"><vh>@path 2bg1</vh>
<v t="course-mde-tw.20140417093332.2050"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140430170549.1693" a="E"><vh>@path 2bg5</vh>
<v t="2014pythonE.20140430170549.1694"><vh>@edit doc.txt</vh></v>
</v>
<v t="kmolII_lite.20140505193226.1631" a="E"><vh>@path 2bg11</vh>
<v t="kmolII_lite.20140505193226.1632" a="O"><vh>@edit doc.txt</vh></v>
</v>
<v t="course-mde-tw.20140417093332.2051" a="E"><vh>@path 2bg15</vh>
<v t="course-mde-tw.20140417093332.2052"><vh>@edit doc.txt</vh></v>
</v>
<v t="kmolII_lite.20140505203306.1631" a="E"><vh>@path 2bg16</vh>
<v t="kmolII_lite.20140505203306.1632"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014spring.20140430140611.1878" a="E"><vh>@path 2bg3</vh>
<v t="kmolII_lite.20140430172749.1604"><vh>@edit doc.txt</vh></v>
</v>
<v t="2014pythonE.20140512232735.2633" a="E"><vh>@path 2bg12</vh>
<v t="2014pythonE.20140512232735.2634"><vh>@edit doc.txt</vh></v>
</v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="2014pythonE.20140422152422.1669">配合 2014cda 專案

2014cdaproject@gmail.com

正好可以有三個  Python 3.3 應用程式, 用於 

2014cda, 2014cdb, 2014c2 等三個專案使用</t>
<t tx="2014pythonE.20140422152422.1670">puttygen.exe 導入 private key 後, 以 Conversions-&gt;Export OpenSSH key

將資料存入 V:\home\.ssh\id_rsa 檔案中

當使用者利用  git clone OpenShift 平台上專案時, Git 將會利用 id_rsa 私鑰與 OpenShift settings 設定所儲存的 public key 進行配對, 若通過驗證才能更新或擷取 OpenShift 平台上的程式碼.</t>
<t tx="2014pythonE.20140422152422.1671">course-mde-tw on Github 使用 coursemdetw@gmail.com 登記

couorsemdetw on Github 使用 course@mde.tw 登記

2014cda, 2014cdb, 2014c2 Github 專案登記在 coursemdetw 名下

course-mde-tw 為協同人員

</t>
<t tx="2014pythonE.20140430152238.1751"></t>
<t tx="2014pythonE.20140430162301.1761"></t>
<t tx="2014pythonE.20140430170549.1693"></t>
<t tx="2014pythonE.20140507141007.1807"></t>
<t tx="2014pythonE.20140507142951.1656"></t>
<t tx="2014pythonE.20140512232735.2633"></t>
<t tx="2014pythonE.20140513163709.1881"></t>
<t tx="2014pythonE.20140513163709.1882">@nocolor
﻿2bg17報告內容
===

2bg17報告內容

報告摘要
===

2bg17 報告摘要內容
</t>
<t tx="2014pythonE.20140514141707.2193"></t>
<t tx="2014pythonE.20140514155607.1899"></t>
<t tx="2014pythonE.20140519074351.1903"></t>
<t tx="2014pythonE.20140519202248.1430"></t>
<t tx="2014pythonE.20140519202248.1431">@nocolor
﻿2bg8報告內容
===

2bg8報告內容

報告摘要
===

2bg8 報告摘要內容
</t>
<t tx="2014pythonE.20140519202248.1434"></t>
<t tx="2014pythonE.20140520001559.1748"></t>
<t tx="2014pythonE.20140520001559.1752"></t>
<t tx="2014pythonE.20140521202529.2011"></t>
<t tx="2014pythonE.20140528233931.2166"></t>
<t tx="2014spring.20140430140611.1875">Week 10:

第四組缺席

40123207
40123210</t>
<t tx="2014spring.20140430140611.1878"></t>
<t tx="2014spring.20140430140611.1945">1. 各組要自行建立 doc 檔案目錄, 而且可以納入 pandoc pdf 與 html 文件產生機制

2. 各組以協同模式在教材一中各選一段, 以英文+中文並陳的方式, 列在各自的 doc.txt 文件中. (之後將需要寫一個類似 pandoc  按鈕來整合此份文件)

3. 各組將上學期的 Pro/Web.Link 程式取出, 準備以各組編寫一個零件尺寸修改的模式來修改 application 雲端程式.

4. 除整班協同的 github 外, 各組需要在組內另外建立一個小分組協同專案來執行小分組協同任務.</t>
<t tx="2014spring.20140430205920.1866">評量規劃:

每週以組為單位執行分組任務, 評分類別如下:

每完成一項任務: 得分 5 分

幾乎完成: 得分 4 分

部分完成: 得分 3 分

未能完成: 得分 0 分

Week 12: 二項任務, 配分 10 分

Week 13: 三項任務, 配分 15 分

Week 14: 三項任務, 配分 15 分

Week 15: 三項任務, 配分 15 分

Week 16: 三項任務, 配分 15 分

Week 17: 三項任務, 配分 15 分

Week 18: 三項任務, 配分 15 分

備註: 

各週任務評量將在下課前 15 鐘完成

若該週因放假不上課, 則任務仍由 Github 專案上發送, 並以 take-home 模式執行.</t>
<t tx="2014spring.20140430205920.1895">@language python
import os
import re

def atoi(text):
    return int(text) if text.isdigit() else text

def natural_keys(text):
    '''
    alist.sort(key=natural_keys) sorts in human order
    http://nedbatchelder.com/blog/200712/human_sorting.html
    (See Toothy's implementation in the comments)
    '''
    return [ atoi(c) for c in re.split('(\d+)', text) ]
'''
c is the commander of the outline containing the script.
g is Leo's leo.core.leoGlobals module.
p is the presently selected position, the same as c.p.
'''
d = c.scanAllDirectives(p)
#g.es(d)
# d 為 commander 由目前所在目錄進行指令設定掃描
# d 資料格式為 dictionary
''' 
實際操作下, d 為 
{'tabwidth': -4, 'lineending': None, 'language': 'python', 'encoding': None, 'pluginsList': [], 'pagewidth': 70, 'wrap': True, 'path': 'D:\\github\\mdeCourse\\2013spring', 'delims': ('#', '', '')}
'''
# 在處理 pandoc 之前,  將協同人員上傳的 file1.txt 與 file2.txt 結合為 demo.txt
# 以下採用 os.walk 自動進入目錄取出目錄與檔案名稱後, 採自然排序
# 最後再利用 insert 將標題頁面放入數列最前頭
'''
# 這裡是原先使用的手動檔名排序數列, 好處為可以任意編排次序
filenames = ['title.txt', '2bg1/doc.txt', '2bg2/doc.txt', '2bg3/doc.txt', '2bg5/doc.txt', '2bg15/doc.txt', '2bg13/doc.txt', '2bg9/doc.txt','2bg6/doc.txt','2bg17/doc.txt','2bg7/doc.txt','2bg10/doc.txt']
'''
# 定義要合併檔案的共同目錄
directory = "V:/project/2014cdb/wsgi/doc/"
# 定義一個空數列
filenames = []
for (path, dirs, files) in os.walk(directory):
    for fname in files:
        # 利用 if 判斷式將外部的 title.txt 與其他檔案隔開不取
        if path != directory:
            filenames.append(path+"/"+fname)
# 依照 natural_keys 客製化排序, 使用上面的函式定義
filenames.sort(key=natural_keys)
# 利用 insert 以 0 為索引, 將 title.txt 放在數列最前頭
filenames.insert(0, directory+"title.txt")
# 以下將依據 filenames 數列中的檔案合併為 result.txt 之後再進行文書處理轉換
with open('V:/project/2014cdb/wsgi/pandoc/result.txt', 'w', encoding="utf-8") as outfile:
    for fname in filenames:
        #fname = directory+fname
        with open(fname, encoding="utf-8") as infile:
            for line in infile:
                outfile.write(line)
            outfile.write("\n\n")

# 將目錄指到 pandoc
mandir = d.get('path') + "/wsgi/pandoc"
g.es(mandir)
os.chdir(mandir)
# 先轉一份 html 
os.system("V:\\apps\\pandoc\\pandoc.exe -s result.txt -o result.html")
# 利用 pandoc 將 demo.txt 轉為 demo.tex, 在此決定是否要有 toc
os.system("V:\\apps\\pandoc\\pandoc.exe -s result.txt --toc -o result.tex")
# 中文設定必須要放在 begin document 之前
setup = ''' 
\\usepackage{xeCJK}    % 中英文字行分開設置 
\\usepackage[T1]{fontspec}    %設定字體用 
\\usepackage{graphicx} 
\\usepackage{fancyvrb} % for frame on Verbatim 
\\setCJKmainfont{新細明體}
'''
# 在 demo.tex 最前頭加上"中文設定"
file = open("result.tex", "r", encoding="utf-8")
lines = file.read().splitlines()
file.close()
file = open("result.tex", "w", encoding="utf-8")
for i in range(len(lines)):
    # 設法將中文設定放在文件開始之前, 以便蓋掉之前的設定
    if "\\begin{document}" in lines[i]:
        file.write(setup+lines[i]+"\n")
    else:
        file.write(lines[i]+"\n")
file.close()
target_name = "result"
filename = target_name+".tex"
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xelatex.exe -no-pdf -interaction=nonstopmode "+filename)
filename = target_name+".xdv"
os.system("V:\\apps\\portableLatex\\MiKTeX\\texmf\\miktex\\bin\\xdvipdfmx.exe -vv -E "+filename)

filename = target_name+".pdf"
os.system(filename)</t>
<t tx="2014spring.20140503125211.2473">各分組在 Github 中要有一個參與 2014c2 協同程式開發的帳號外

各組員同時在 Github 與 Bitbucket 下都要有對應帳號, 並且利用 Github (不限協同人員個數, 但是免費帳號只允許建立開放專案)或 Bitbucket (專案可以選擇公開或私用, 但是免費帳號只允許最多 5 人協同) 的協同模式, 在小分組下共享程式碼.

Github 2014c2 全班協同專案將會有一個對應的 OpenShift 網站, 各組另外要建立一個分組的 OpenShift 網站與 Github 全班協同專案同步, 以練習各分組的雲端程式部署與控管流程 (各分組成員必須將各自的 public keys 放到分組 OpenShift 應用程式中, 並且自行練習以協同模式控管雲端網站, 而且要與各分組的 Bitbucket 或 Github 程式同步).

各分組雲端程式位於 wsgi/programs/c2g1 目錄下, 使用時必須:
    
    1. 確認主要程式 application 中已經導入分組模組, 且與 root 下屬方法加以對應
    
    也就是下列程式的置入.
    
#####################################################
# 這是 c2g1 組的物件案例定義
#####################################################
# 導入 application 目錄下的模組
# 導入 programs/c2g1 並且命名為 c2g1
# 模組內建使用 __init__.py 中的 C2G1 類別
# 若使用 programs/c2g1/class1.py, 則使用 import programs.c2g1.class1 as c2g1
import programs.c2g1 as c2g1
# 利用 c2g1 目錄下的 __init__.py 檔案中的 C2G1 類別建立案例物件
# 而且指到 application 根目錄下的 c2g1
root.c2g1 = c2g1.C2G1()
#####################################################
# 結束 c2g1 組的物件案例定義
#####################################################

    2. 各分組則在 wsgi/programs/c2gX 目錄下各自開發 __init__.py 程式方法
    
    3. 完成後先在近端測試, 完全符合需求且根據標準流程, 拉下目前協同專案區最新的 github 程式碼後, 檢驗 .leo 是否可以正確開啟, 各對應目錄是否正確配置, application 是否可以正確執行後, 再推送到協同專案區, 並與各分組的 OpenShift 雲端網站進行同步.</t>
<t tx="2014spring.20140503125211.2474"></t>
<t tx="2014spring.20140503125211.2476"></t>
<t tx="2014spring.20140513154549.3590">總結目前所完成的相關配置與任務

  - 最初利用 Dokuwiki on OpenShift 建立多人協同的  wiki 寫作系統
  
  好處是此一系統可以由管理者自由掌控, 所有內容都是純文字檔案, 無需資料庫
  
  -  接著, 為了讓管理者可以利用程式控管 Dokuwiki 多人模式下的帳號與密碼, 採用 Python 3 與  sha1 編碼, 產生多人帳號與密碼, 並且可以自由控管各帳號所能擷取的頁面
  
  - 近端與遠端的 Dokuwiki 可以嵌入 STL 零件, 設計圖片, Vimeo 影片等產品設計相關內容
  
  - 接著為了利用 Python 3 控管多人所建立的文書處理與產品設計程式內容, 利用 Leo Editor 與 CherryPy 建立一個 Github 上全班協同的專案倉儲, 所有 collaborators 可以自由更新專案內容, 而且可以自由編寫 Github 所提供的 Wiki 系統.
  
   - 此外全班協同專案中, 除了各組協同文書處理外, 也透過 CherryPy 與 Python 3 的模組導入, 讓各組各自擁有網際協同程式模組的控制權, 可以利用 Creo Pro/Web.Link 建立網際協同設計程式.
   
   - 協同倉儲的 CherryPy 程式除了可在 Github 上進行版次管理外, 也可與對應的 Bitbucket 倉儲與 OpenShift 雲端網站進行同步, 而雲端網站的同步設定則分為全班協同網站(由老師控管) 以即由各組自行設定對應的 OpenShift 雲端網站兩種.
   
   本週的任務一即是希望透過目前已經完成的協同環境配置, 利用流程圖進行表示, 將各模組的功能與設置目的加以整合, 並將內容放入各組的文書處理區.
   
   但是, 由於全班協同的雲端網站目前並沒有內容管理系統, 因此本週將設法嵌入 CMSimply 套件, 充當全班協同網站的內容管理系統, 以便導引全班協同的相關內容.</t>
<t tx="2014spring.20140513154549.3591">Constraint Attributes
約束條件屬性

Methods and Properties Introduced:
衍生的方法與性質

pfcConstraintAttributes.Create()
建立約束條件屬性

pfcConstraintAttributes.Force
強制約束條件

pfcConstraintAttributes.Ignore
忽略約束條件

The method pfcConstraintAttributes.Create() returns the constraint attributes object based on the values of the following input
parameters:

約束條件建立方法, 依照下列輸入變數而傳回不同的約束條件屬性

• Ignore—Constraint is ignored during regeneration. Use this capability to store extra constraints on the component, which allows you to quickly toggle between different constraints.

是否忽略 – 約束條件在更新模型時是否忽略, 可以利用此一忽略特性, 將額外的約束條件附加在組立元件上, 讓使用者可在不同約束條件間切換

• Force—Constraint has to be forced for line and point alignment.

是否強制 – 當使用線或點對齊約束時, 可以強制進行約束.

• None—No constraint attributes. This is the default value.

無約束屬性 – 內定為無約束屬性.

static pfcConstraintAttributes Create (boolean Force, boolean Ignore)

Creates a new constraint attributes object.

用來建立新的約束條件屬性物件

Parameters:

輸入變數

Force

強制變數

true if the constraint should be forced (required for ASM_CONSTRAINT_PNT_ON_LINE).

若設為真, 表示約束條件將會強制執行 (使用點在線上約束時必須設為真)

Ignore

忽略變數

true if the constraint is stored with the component, but not enforced. false if the constraint is enforced.

若設為真, 表示約束將附加在元件上, 但卻不強制執行, 若設為偽, 則該約束條件將會強制執行.</t>
<t tx="2014spring.20140513154549.3595"></t>
<t tx="course-mde-tw.20140417093332.1998"></t>
<t tx="course-mde-tw.20140417093332.1999">QSplitter::handle {
    background-color: #CAE1FF; /* lightSteelBlue1 */
}

QStackedWidget {
    /* background-color:lightpink; */
    border-color: red;
    padding: 0px;
    /* border-width: 0px; */
    /* background-color: yellow; */
}

QSplitter {
    border-color: white;
    background-color: white;
    border-style: solid;
}

QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 22px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="course-mde-tw.20140417093332.2000">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="course-mde-tw.20140417093332.2001"></t>
<t tx="course-mde-tw.20140417093332.2027"></t>
<t tx="course-mde-tw.20140417093332.2047">各組的報告統一放在 doc 目錄下, 並且按照分組編號作為目錄名稱

最後希望能夠利用程式整合各分組報告內容, 統一處理成為 pdf 與 html 檔案

目錄架構:

doc 
    2ag1
        doc.txt
    2ag2
        doc.txt</t>
<t tx="course-mde-tw.20140417093332.2048"></t>
<t tx="course-mde-tw.20140417093332.2049"></t>
<t tx="course-mde-tw.20140417093332.2051"></t>
<t tx="course-mde-tw.20140417093332.2058">@language latex

% 中文內容設定

\usepackage{xeCJK}    % 中英文字行分開設置
\usepackage[T1]{fontspec}    %設定字體用
\usepackage{graphicx}
\usepackage{fancyvrb} % for frame on Verbatim
% 新細明體
% 文鼎ＰＬ新宋
\setCJKmainfont{新細明體}</t>
<t tx="course-mde-tw.20140417093332.2060"></t>
<t tx="course-mde-tw.20140417093332.2063">@language md
"# This is my README" 

同步規劃:

Bitbucket: https://bitbucket.org/cmsimply/public_cmsimply

Bitbucket 免費帳號特性:

可以自由將倉儲轉為 public 或 private, 沒有限制

每一倉儲最多只能有 5 個 collaborators

OpenShift: http://cdproject-coursemdetw.rhcloud.com/

OpenShift 免費帳號特性:

支援各種網際程式雲端部署, 但是每一帳號至多只能建 3 個應用程式

接下來要加上與 Github 的全班協同倉儲進行同步

Github 免費帳號特性:

免費帳號只能使用 public 倉儲

沒有限制 collaborators 個數, 適合多協同人員執行開放專案使用
</t>
<t tx="course-mde-tw.20140422171455.1745">在 Github 倉儲中將 OpenShift 倉儲設為 remote 倉儲

git remote add openshift ssh://5356315e4382ec2b3f000557@2014cda-mdenfu.rhcloud.com/~/git/2014cda.git/

利用 git pull 拉下目前位於 OpenShift 對應倉儲上的程式碼

git pull 的目的在設法讓 OpenShift 與 Github 中的 git 專案合併

若與 Github 近端倉儲中的資料沒有產生衝突, 則可以在內容修改後, 同時 push 到 Github 與 OpenShift

目前 OpenShift 網站: http://2014cda-mdenfu.rhcloud.com/

Github 倉儲則為: https://github.com/coursemdetw/2014cda

目前的規劃是讓參與協同者可以自由更新 Github 倉儲內容

並且將 Github 倉儲與各組可以控制的 OpenShift 網站同步</t>
<t tx="course-mde-tw.20140422221207.1747">mathspec.sty 檔案必須放在 pandoc 目錄中, 與文書處理原始檔案放在一起.</t>
<t tx="kmolII_lite.20140430174156.1609"></t>
<t tx="kmolII_lite.20140430174205.1613"></t>
<t tx="kmolII_lite.20140505193226.1631"></t>
<t tx="kmolII_lite.20140505193226.1632">@nocolor
﻿===

這是 2bg11報告內容

報告摘要
===

這是 2bg11 報告摘要內容


第十二週任務
===

1.請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)

OpenShift 網站:http://cdbg11-40123229.rhcloud.com/
W8,W9摘要:
dokuwiki:http://capd11-40123229.rhcloud.com/doku.php
第八週小考

第一題:http://192.168.1.49:8000/doku.php?id=start&amp;do=admin&amp;page=usermanager
第三題:https://bitbucket.org/40123233/40123233_w16/commits/9552efdec7f15d3b89ada30a28f89501b7f7db30

第九週期中考

第二題:https://python-40123233.rhcloud.com/
第三題:https://vimeo.com/92707935

第十三週任務
===

(1) 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

(2) 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

copy:https://copy.com/BZJWkCVjfHsH

vimeo:https://vimeo.com/98406111

第十四週任務
===

(1) 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.(5 分)

(2) 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.(5 分)

copy:https://www.copy.com/s/itIdwMJ0Ai34/w14.flv

vimeo:https://vimeo.com/98849171

第十五週任務
===

(1) 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.(5 分)

(2) 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.(5 分)

copy:https://www.copy.com/s/itIdwMJ0Ai34/w14.flv

vimeo:https://vimeo.com/98849171

第十六週
===

要點

第十六, 十七與十八週的任務 (佔期末成績 45 分), 在讓各組根據教材三的架構做為導引, 建立一個類似 Teamproject 的雲端軟體套件.

其中要點包含:

協同產品設計為同步協同或非同步協同
套件的架構為何(流程圖), 希望引入哪些技術(本課程教導了哪些協同技術?), 解決哪些問題, 提升哪些效能?
完成後援此教材三的格式, 編寫一份套件簡介的報告(至多 5 頁)
所完成的內容, 必須同步放入各組雲端網站, Github 協同專案, 以及各組的協同報告中.
各組完成專案後, 必須按照時間在各週內進行組員自我評分(由各組組員自行評分), 以及各組自我評分(必須找其他三組進行交叉評分).</t>
<t tx="kmolII_lite.20140505203306.1631"></t>
</tnodes>
</leo_file>
