2bg14報告內容
===

這是 2bg14報告內容

報告摘要
===

這是 2bg14 報告摘要內容

第十週心得整理
===

1.Creo 必須使用 ” 64 位元” “教育版本”
2.Openshift與Github同步
3.在doc及leo下新增14組
4.修正 core/LeoApp.py 第 3237 行, 加入 encoding=“UTF-8”, 否則會發出 5.CP950 無法解讀 UTF-8 編碼內容的錯誤.
6.git clone https://github.com/coursemdetw/2014cdb.git
7.leo 及 2014cdb\wsgi\doc 下新增cdbg14
8.git add . ; git commit -m “add cdbg14” ; git push
9.若顯示hint則在git pull 之後再 git push

第十一週心得整理
===

Proweb.link組合

方形

1.設定IE→工具→網際網路選項→安全性→信任的網站→自訂等級 允許信任網站執行 ActiveX
2.設定Creo config.pro 路徑為Creo2_m060_x64\Common Files\M060\text
3.開啟64位元Creo
4.建立一方型,並給定參數及關係,工具→參數→加入A.B.C;工具→關係→d0=a,d1=b,d2=c
5.在內嵌網頁輸入http://2014cda-mdenfu.rhcloud.com/cdag1/cube1

四連桿

1.將fourbar資料夾放入V:\home
2.在Creo下新增一組合件
    在內嵌網頁輸入http://2014cda-mdenfu.rhcloud.com/cdag1/fourbar1

第十二週心得整理
===

Github上傳之前確認:
1.leo存檔後,關閉後再開啟,確認可以正常開啟
2.執行leo內的application,連到localhost:8080確認正常執行
3.傳到自己組別的Github
4.確認無誤後再傳到課程協同Github

本週完成事項:
1.建立本組(14)之CMSimply
2.並同步至本組的Github



第十二週任務
===

1.請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)

第十四組OpenShift 網站:https://cdbg14-40123223space.rhcloud.com

W8,W9摘要:
1.   建立各組  OpenShift  上的  dokuwiki:   
http://cd2bno14-40123223space.rhcloud.com/doku.php 
2.   請將課程教材一  與  課程教材二  整理成中文簡要內容,  並根據協同產品設
計專案中的說明,  以組為單位完成期中報告: 
課程教材一:https://copy.com/GEh7IVDbp4oy
課程教材二:https://copy.com/yxnSpzNnwqPd
3.   各組所完成的期中報告原始資料必須送到  Bitbucket  與  OpenShift 
Dokuwiki  雲端維基網站,  並在網站中提供報告  html  連結與  pdf  文件下
載. 
https://bitbucket.org/40123246/14wiki 
4.   期中考試與分組報告必選題: 
坐位分配:https://copy.com/u4zUM3WxxQrR

2.請各組設法利用 CherryPy 與 Pro/Web.Link 技術, 在 Github 協同專案中建立一個能夠透過連結或表單控制 Cube 零件, a, b, 或 c 零件尺寸的網際協同程式, 讓使用者可以藉以利用近端的 Creo 嵌入式瀏覽器控制 Cube 的尺寸後列出該零件的體積大小. (佔期末成績 5分)
https://cdbg14-40123223space.rhcloud.com/cdbg14

第十四週各組員心得
===

40123223 林重佑 心得

第一題:
1.將BEAM_ANGLE零件TOP,FRONT,RIGHT面與基準面之相對的面重合

2.加入AXLE_10,新增參考軸方便組立;並在BEAM_ANGLE相對位置也新增參考軸,再將軸之頂面.側面與BEAM_ANGLE孔重合

3.加入AXLE_5,步驟2相同

4.加入CROSSBLOCK_2與AXLE_10方法類似,將其內孔之頂面.側面與AXLE_10相對位置重合,包含AXLE_5上共六個,方法類推

5.加入BUSHING與前項步驟相同,將其內孔之頂面.側面與AXLE_10相對位置重合

6.加入CONN底面CROSSBLOCK_2與重合,另一端CONN凸緣與CROSSBLOCK_2內孔重合,另一支如同

7.加入BEAM內孔與CONN軸外表面重合,共兩孔,接著重合BEAM之內面與CROSSBLOCK_2面重合即完成限制

8.完成組合
COPY.COM WORD圖文報告:https://copy.com/3xU8YQV4kDjR

第二題:
copy.com連結
組合件檔案:https://copy.com/rbQkOO10JICo
影片檔案:https://copy.com/AOIXlbXT4rDE

vimeo連結:https://vimeo.com/96676542



40123246 劉哲宇 心得

第一題:
1.將beal angle零件的面與基準面重合

2.將AXLE和beam angle用零件檔單獨開啟並新增基準面,以方便後續的作業

3.加入axle 10到beam angle裡面並將接槽重合,axle 5也是,並利用剛剛新增的基準面來讓零件置中

4.先加入crossblock,在最外圍在加上bushing,方法和前面一樣

5.加入conn,一端與crossblock重合,另一端則套上beam3


第二題:
vimeo網址:https://vimeo.com/96676868

copy網址:https://copy.com/BJat3rX3SUO0

第十五週各組員心得
===

40123223 林重佑 心得

第一題:

1.將BEAM_7零件TOP,FRONT,RIGHT面與基準面之相對的面(ASM_TOP,ASM_FRONT,ASM_RIGHT)重合

2.新增BEAM_7的中央基準面(DTM1),距TOP面0.40325及AXLE_3之中心軸與中央基準面(DTM1)距TOP面1.21

3.加入AXLE_3與BEAM_7重合中心軸,以及重合步驟2所新增之中央基準面

4.加入AXLE_EXTENDER軸之內頂面與AXLE_3軸之外頂面重合,再將AXLE_EXTENDER左端面與AXLE_3右端面重合

5.加入AXLE_EXTENDER軸之內頂面與AXLE_3軸之外頂面重合,再將AXLE_EXTENDER右端面與AXLE_3左端面重合

6.加入AXLE_RED軸之外頂面與AXLE_EXTENDER內頂面重合,再將AXLE_RED右端面與AXLE_3軸之左端面重合

7.加入AXLE_RED軸之外頂面與AXLE_EXTENDER內頂面重合,再將AXLE_RED左端面與AXLE_3軸之右端面重合

8.加入CONN_AXLE_FEMALE與AXLE_RED中心軸重合,再將CONN_AXLE_FEMALE右端面與AXLE_EXTENDER左端面重合

9.加入CONN_AXLE_FEMALE與AXLE_RED中心軸重合,再將CONN_AXLE_FEMALE左端面與AXLE_EXTENDER右端面重合

10.加入BEAM_ANGLE_4X2中心軸與CONN_AXLE_FEMALE中心軸重合,再將BEAM_ANGLE_4X2左端面與CONN_AXLE_FEMAL右端面重合

11.加入CONN中心軸與BEAM_ANGLE_4X2上面孔的中心軸重合,再將CONN凸緣左端面與BEAM_ANGLE_4X2孔之右端面重合

第二題:
copy.com連結
組合件檔案:https://copy.com/8rg2vJw1wamY
影片檔案:https://copy.com/OURPhIChu2ML

vimeo連結:https://vimeo.com/97300300



40123246 劉哲宇 心得

 第一題:

1.先單獨開啟beam7,axle3的零件檔,並在裡面設置平面,以方便置中

2.以beam7為基準,插入axle3對準平面後並置中

3.加入2個axle extender,將面看軸對應好,在與beam7貼合

4.加入axle red到axle extender裡面,並把面和軸對應好

5.加入兩個conn axle female並與axle extender對應好

6.加入beam angle 4X2,和conn axle female對應好

7.將conn插入到beam angle 4x2的插槽內並將面對好

 

copy連結:https://www.copy.com/s/qC7VjZQCg7NU

vimeo連結:http://vimeo.com/97301079


第十六~十八週Teamproject套件簡介
===

一.摘要

自從上了這門課後，常常會去關注一些國際的協同新聞，”結力量大─中國開發者完成《Swift》中文版”，蘋果公司6月3日凌晨的2014年WWDC上，向工程師圈投下重磅炸彈—推出全新程式語言 Swift。整個程式界頓時一片沸騰。正當大家熱議這門新語言的特性之時，一群中國開發者在 GitHub 上開啓「《The Swift Programming Language》in Chinese 」開源翻譯專案，採用眾包翻譯的方式，整個翻譯團隊在9天內完成了近670頁的 Swift 語言文件翻譯工作。翻譯成員更是來自網上各個角落。該專案開始一周左右，在GitHub上獲得了1300多個Star和300多個Fork，GitHub週總榜最高排名第 4。這個專案的成功，給我們帶來一個新的思考話題：協同寫作，或許是未來寫作的趨勢。

《The Swift Programming Language》in Chinese關鍵時間點

6 月 3 日，凌晨 3 點，蘋果發布 Swift 語言；
6 月 3 日，翻譯專案啟動，專案在 GitHub 上獲得 50 個 Star；
6 月 4 日，開始有人關注，專案在 GitHub 上獲得 300+Star；
6 月 5 日 --6 日，協作機制基礎建立，翻譯工作開始步入正軌；
6 月 7 日 --8 日，翻譯緩慢加速；
6 月 9 日 --11 日，翻譯全速進行，完成全部翻譯；
6 月 12 日，完成校對全過程。《The Swift Programming Language》中文版正式發布！
《The Swift Programming Language》in Chinese協作形式

整個翻譯專案通過 GitHub 進行協作，使用 Markdown 進行文本編輯和排版，使用 Gitbook 製作成靜態頁面並託管到 GitHub 上，供線上閱讀。Markdown 文本也可以轉換成 Epub、PDF、mobi 等多種電子書格式。

參與翻譯的網友首先需要在 GitHub 專案上認領章節，認領成功後只需要不斷更新 Markdown 格式的文本文件，直到翻譯完成。在某章翻譯完成後，再會將網友翻譯完成的內容合併起來，通過 Gitbook 轉換成在線頁面並更新到 GitHub。

這個事件給我們這組同學一個很大的啟示，未來也包括現在，大家一起做一件Project是理所當然的，在遠端和近端與自世界各地的人一起執行作業，如何有效地做一件事情，降低作業成本，提升企業競爭力是你我必須努力的方向。

 

二.簡介:

當客戶端使用者,擁有零件檔及Creo程式,就能透過Pro/Web.Link程式,就能將零件自動組立.

本學期所學到的內容就包含編寫Pro/Web.Link程式,完成後上傳至Openshift上,客戶端只要設定好網頁安全性(允許ActiveX).信任的網站以及在Creo內建瀏覽器啟用Pro/Web.Link,之後在內建瀏覽器鍵入自動組立程式的網址即可完成組立.

 

三.目前擁有技術:

1.在近端利用 Creo 繪製零件

2.利用遠端 Pro/Web.Link 程式修改近端 Creo 零件尺寸

3.將近端零件轉為 STL, 上傳至遠端 CMSimply 網站中檢視

4.在近端利用手動組立零件

5.在近端利用遠端網站上的 Pro/Web.Link 進行自動組立

6.在近端與雲端建立 Dokuwiki 網站

7.利用手動或半自動方式管理 Dokuwiki 的使用者

8.在近端與雲端建立 CMSimply 網站

9.利用 Github 與 Bitbucket 管理所有文字資料的版次

10.利用近端 Leo Editor 與可攜程式系統管理所有資料

11.利用近端環境產生 pdf 與 html 格式報告資料

 

套件架構流程圖:http://i.imgur.com/a6Dj0qc.png



三.一.希望擁有技術:

1.在手動組立過程,就同時完成自動組立程式

2.自動產生零件基準面,方便組立

3.可直接在Creo執行並偵錯

4.有一程式方便管理網站,以上傳方式加入自動組立程式

5.可變更組立零件各別零件尺寸

6.可在限制條件允許下替換組立件內的不同零件

 

四.問題及解決:

一開始遇到問題就是課程協同的GitHub常常使Leo檔出錯,後來透過近端執行applicaton並到locahost測試檢查是否達到預期功能之後上傳到自己的GitHub及Openshift進行遠端測試後,就可以確保不會出錯.

另一部分,在編寫組立程式時,時常要自己建立基準面,若在協同組立一大型組件時,未告知及給予更改過後的零件,將會影響自動組立程式的執行,所以有對零件做任何更動時,都必須告知,才能使得組立順利進行.

 

五.結論:

透過本課程教授的協同產品設計技術,我們將程式透過Leo Editor管理並執行近端測試,再將其上傳至GitHub及Openshift執行遠端測試,並結合CMSimply 網站,形成完整的協同計畫,客戶端只需鍵入網址即能完成組立,背後我們必須做的事情非常多,我們需要先手動組立零件,才能了解所結合的條件,我們也時常需要自己建立零件參考面.軸,這都是寫出程式的前置作業,下一步才有辦法編寫Pro/Web.Link程式,這些技術也能讓組員分配一大型組件中不同的小組件,編寫好程式,透過Pro/Web.Link即能快速又有效率地完成一大型組件.

 

六.參考文獻:

1.MDE課程網頁https://wiki.mde.tw

2. Benoıt Eynard,Sebastien Lienard,Sebastien Charlesand Aurelien Odinot (2005).

Web-based Collaborative Engineering Support System